// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: majong_rpc.proto

package mahjong.mode.proto;

/**
 * Protobuf enum {@code majong_rpc.SettleType}
 */
public enum SettleType
        implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 平局
     * </pre>
     * <p>
     * <code>PING_JU = 0;</code>
     */
    PING_JU(0),
    /**
     * <pre>
     * 放炮
     * </pre>
     * <p>
     * <code>FANG_PAO = 1;</code>
     */
    FANG_PAO(1),
    /**
     * <pre>
     * 胡炮
     * </pre>
     * <p>
     * <code>HU_PAO = 2;</code>
     */
    HU_PAO(2),
    /**
     * <pre>
     * 自摸
     * </pre>
     * <p>
     * <code>ZI_MO = 3;</code>
     */
    ZI_MO(3),
    /**
     * <pre>
     * 被自摸
     * </pre>
     * <p>
     * <code>BZI_MO = 4;</code>
     */
    BZI_MO(4),
    /**
     * <pre>
     * 杠上炮
     * </pre>
     * <p>
     * <code>GANG_PAO = 5;</code>
     */
    GANG_PAO(5),
    /**
     * <pre>
     * 胡杠上炮
     * </pre>
     * <p>
     * <code>HU_GANG_PAO = 6;</code>
     */
    HU_GANG_PAO(6),
    /**
     * <pre>
     * 杠上花
     * </pre>
     * <p>
     * <code>GANG_HUA = 7;</code>
     */
    GANG_HUA(7),
    /**
     * <pre>
     * 被杠上花
     * </pre>
     * <p>
     * <code>BGANG_HUA = 8;</code>
     */
    BGANG_HUA(8),
    /**
     * <pre>
     * 胡抢杠
     * </pre>
     * <p>
     * <code>QIANG_GANG = 9;</code>
     */
    QIANG_GANG(9),
    /**
     * <pre>
     * 被抢杠
     * </pre>
     * <p>
     * <code>BQIANG_GANG = 10;</code>
     */
    BQIANG_GANG(10),
    UNRECOGNIZED(-1),;

    /**
     * <pre>
     * 平局
     * </pre>
     * <p>
     * <code>PING_JU = 0;</code>
     */
    public static final int PING_JU_VALUE = 0;
    /**
     * <pre>
     * 放炮
     * </pre>
     * <p>
     * <code>FANG_PAO = 1;</code>
     */
    public static final int FANG_PAO_VALUE = 1;
    /**
     * <pre>
     * 胡炮
     * </pre>
     * <p>
     * <code>HU_PAO = 2;</code>
     */
    public static final int HU_PAO_VALUE = 2;
    /**
     * <pre>
     * 自摸
     * </pre>
     * <p>
     * <code>ZI_MO = 3;</code>
     */
    public static final int ZI_MO_VALUE = 3;
    /**
     * <pre>
     * 被自摸
     * </pre>
     * <p>
     * <code>BZI_MO = 4;</code>
     */
    public static final int BZI_MO_VALUE = 4;
    /**
     * <pre>
     * 杠上炮
     * </pre>
     * <p>
     * <code>GANG_PAO = 5;</code>
     */
    public static final int GANG_PAO_VALUE = 5;
    /**
     * <pre>
     * 胡杠上炮
     * </pre>
     * <p>
     * <code>HU_GANG_PAO = 6;</code>
     */
    public static final int HU_GANG_PAO_VALUE = 6;
    /**
     * <pre>
     * 杠上花
     * </pre>
     * <p>
     * <code>GANG_HUA = 7;</code>
     */
    public static final int GANG_HUA_VALUE = 7;
    /**
     * <pre>
     * 被杠上花
     * </pre>
     * <p>
     * <code>BGANG_HUA = 8;</code>
     */
    public static final int BGANG_HUA_VALUE = 8;
    /**
     * <pre>
     * 胡抢杠
     * </pre>
     * <p>
     * <code>QIANG_GANG = 9;</code>
     */
    public static final int QIANG_GANG_VALUE = 9;
    /**
     * <pre>
     * 被抢杠
     * </pre>
     * <p>
     * <code>BQIANG_GANG = 10;</code>
     */
    public static final int BQIANG_GANG_VALUE = 10;


    public final int getNumber() {
        if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                    "Can't get the number of an unknown enum value.");
        }
        return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SettleType valueOf(int value) {
        return forNumber(value);
    }

    public static SettleType forNumber(int value) {
        switch (value) {
            case 0:
                return PING_JU;
            case 1:
                return FANG_PAO;
            case 2:
                return HU_PAO;
            case 3:
                return ZI_MO;
            case 4:
                return BZI_MO;
            case 5:
                return GANG_PAO;
            case 6:
                return HU_GANG_PAO;
            case 7:
                return GANG_HUA;
            case 8:
                return BGANG_HUA;
            case 9:
                return QIANG_GANG;
            case 10:
                return BQIANG_GANG;
            default:
                return null;
        }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SettleType>
    internalGetValueMap() {
        return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<
            SettleType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SettleType>() {
                public SettleType findValueByNumber(int number) {
                    return SettleType.forNumber(number);
                }
            };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
    getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptorForType() {
        return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptor() {
        return mahjong.mode.proto.MajongRpcProto.getDescriptor().getEnumTypes().get(1);
    }

    private static final SettleType[] VALUES = values();

    public static SettleType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
                    "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
    }

    private final int value;

    private SettleType(int value) {
        this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:majong_rpc.SettleType)
}

