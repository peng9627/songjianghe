// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: majong_rpc.proto

package mahjong.mode.proto;

/**
 * <pre>
 * 结算的玩家数据
 * </pre>
 * <p>
 * Protobuf type {@code majong_rpc.SettlePlayerData}
 */
public final class SettlePlayerData extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:majong_rpc.SettlePlayerData)
        SettlePlayerDataOrBuilder {
    // Use SettlePlayerData.newBuilder() to construct.
    private SettlePlayerData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
    }

    private SettlePlayerData() {
        settle_ = 0;
        majong_ = 0;
        adjunct_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }

    private SettlePlayerData(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
            boolean done = false;
            while (!done) {
                int tag = input.readTag();
                switch (tag) {
                    case 0:
                        done = true;
                        break;
                    default: {
                        if (!input.skipField(tag)) {
                            done = true;
                        }
                        break;
                    }
                    case 10: {
                        mahjong.mode.proto.MajongPlayerData.Builder subBuilder = null;
                        if (player_ != null) {
                            subBuilder = player_.toBuilder();
                        }
                        player_ = input.readMessage(mahjong.mode.proto.MajongPlayerData.parser(), extensionRegistry);
                        if (subBuilder != null) {
                            subBuilder.mergeFrom(player_);
                            player_ = subBuilder.buildPartial();
                        }

                        break;
                    }
                    case 16: {
                        int rawValue = input.readEnum();

                        settle_ = rawValue;
                        break;
                    }
                    case 24: {

                        majong_ = input.readInt32();
                        break;
                    }
                    case 34: {

                        adjunct_ = input.readBytes();
                        break;
                    }
                }
            }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                    e).setUnfinishedMessage(this);
        } finally {
            makeExtensionsImmutable();
        }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
        return mahjong.mode.proto.MajongRpcProto.internal_static_majong_rpc_SettlePlayerData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
        return mahjong.mode.proto.MajongRpcProto.internal_static_majong_rpc_SettlePlayerData_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        mahjong.mode.proto.SettlePlayerData.class, mahjong.mode.proto.SettlePlayerData.Builder.class);
    }

    public static final int PLAYER_FIELD_NUMBER = 1;
    private mahjong.mode.proto.MajongPlayerData player_;

    /**
     * <code>.majong_rpc.MajongPlayerData player = 1;</code>
     */
    public boolean hasPlayer() {
        return player_ != null;
    }

    /**
     * <code>.majong_rpc.MajongPlayerData player = 1;</code>
     */
    public mahjong.mode.proto.MajongPlayerData getPlayer() {
        return player_ == null ? mahjong.mode.proto.MajongPlayerData.getDefaultInstance() : player_;
    }

    /**
     * <code>.majong_rpc.MajongPlayerData player = 1;</code>
     */
    public mahjong.mode.proto.MajongPlayerDataOrBuilder getPlayerOrBuilder() {
        return getPlayer();
    }

    public static final int SETTLE_FIELD_NUMBER = 2;
    private int settle_;

    /**
     * <code>.majong_rpc.SettleType settle = 2;</code>
     */
    public int getSettleValue() {
        return settle_;
    }

    /**
     * <code>.majong_rpc.SettleType settle = 2;</code>
     */
    public mahjong.mode.proto.SettleType getSettle() {
        mahjong.mode.proto.SettleType result = mahjong.mode.proto.SettleType.valueOf(settle_);
        return result == null ? mahjong.mode.proto.SettleType.UNRECOGNIZED : result;
    }

    public static final int MAJONG_FIELD_NUMBER = 3;
    private int majong_;

    /**
     * <pre>
     * 胡的哪张牌
     * </pre>
     * <p>
     * <code>int32 majong = 3;</code>
     */
    public int getMajong() {
        return majong_;
    }

    public static final int ADJUNCT_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString adjunct_;

    /**
     * <pre>
     * 附加数据，用于一些特殊需求的麻将
     * </pre>
     * <p>
     * <code>bytes adjunct = 4;</code>
     */
    public com.google.protobuf.ByteString getAdjunct() {
        return adjunct_;
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
        if (player_ != null) {
            output.writeMessage(1, getPlayer());
        }
        if (settle_ != mahjong.mode.proto.SettleType.PING_JU.getNumber()) {
            output.writeEnum(2, settle_);
        }
        if (majong_ != 0) {
            output.writeInt32(3, majong_);
        }
        if (!adjunct_.isEmpty()) {
            output.writeBytes(4, adjunct_);
        }
    }

    public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (player_ != null) {
            size += com.google.protobuf.CodedOutputStream
                    .computeMessageSize(1, getPlayer());
        }
        if (settle_ != mahjong.mode.proto.SettleType.PING_JU.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
                    .computeEnumSize(2, settle_);
        }
        if (majong_ != 0) {
            size += com.google.protobuf.CodedOutputStream
                    .computeInt32Size(3, majong_);
        }
        if (!adjunct_.isEmpty()) {
            size += com.google.protobuf.CodedOutputStream
                    .computeBytesSize(4, adjunct_);
        }
        memoizedSize = size;
        return size;
    }

    private static final long serialVersionUID = 0L;

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof mahjong.mode.proto.SettlePlayerData)) {
            return super.equals(obj);
        }
        mahjong.mode.proto.SettlePlayerData other = (mahjong.mode.proto.SettlePlayerData) obj;

        boolean result = true;
        result = result && (hasPlayer() == other.hasPlayer());
        if (hasPlayer()) {
            result = result && getPlayer()
                    .equals(other.getPlayer());
        }
        result = result && settle_ == other.settle_;
        result = result && (getMajong()
                == other.getMajong());
        result = result && getAdjunct()
                .equals(other.getAdjunct());
        return result;
    }

    @java.lang.Override
    public int hashCode() {
        if (memoizedHashCode != 0) {
            return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasPlayer()) {
            hash = (37 * hash) + PLAYER_FIELD_NUMBER;
            hash = (53 * hash) + getPlayer().hashCode();
        }
        hash = (37 * hash) + SETTLE_FIELD_NUMBER;
        hash = (53 * hash) + settle_;
        hash = (37 * hash) + MAJONG_FIELD_NUMBER;
        hash = (53 * hash) + getMajong();
        hash = (37 * hash) + ADJUNCT_FIELD_NUMBER;
        hash = (53 * hash) + getAdjunct().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
    }

    public static mahjong.mode.proto.SettlePlayerData parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static mahjong.mode.proto.SettlePlayerData parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.proto.SettlePlayerData parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static mahjong.mode.proto.SettlePlayerData parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.proto.SettlePlayerData parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static mahjong.mode.proto.SettlePlayerData parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.proto.SettlePlayerData parseFrom(java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.proto.SettlePlayerData parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.proto.SettlePlayerData parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input);
    }

    public static mahjong.mode.proto.SettlePlayerData parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.proto.SettlePlayerData parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.proto.SettlePlayerData parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() {
        return newBuilder();
    }

    public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(mahjong.mode.proto.SettlePlayerData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
                ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
    }

    /**
     * <pre>
     * 结算的玩家数据
     * </pre>
     * <p>
     * Protobuf type {@code majong_rpc.SettlePlayerData}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:majong_rpc.SettlePlayerData)
            mahjong.mode.proto.SettlePlayerDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return mahjong.mode.proto.MajongRpcProto.internal_static_majong_rpc_SettlePlayerData_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return mahjong.mode.proto.MajongRpcProto.internal_static_majong_rpc_SettlePlayerData_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            mahjong.mode.proto.SettlePlayerData.class, mahjong.mode.proto.SettlePlayerData.Builder.class);
        }

        // Construct using mahjong.mode.proto.SettlePlayerData.newBuilder()
        private Builder() {
            maybeForceBuilderInitialization();
        }

        private Builder(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
        }

        private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
        }

        public Builder clear() {
            super.clear();
            if (playerBuilder_ == null) {
                player_ = null;
            } else {
                player_ = null;
                playerBuilder_ = null;
            }
            settle_ = 0;

            majong_ = 0;

            adjunct_ = com.google.protobuf.ByteString.EMPTY;

            return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
            return mahjong.mode.proto.MajongRpcProto.internal_static_majong_rpc_SettlePlayerData_descriptor;
        }

        public mahjong.mode.proto.SettlePlayerData getDefaultInstanceForType() {
            return mahjong.mode.proto.SettlePlayerData.getDefaultInstance();
        }

        public mahjong.mode.proto.SettlePlayerData build() {
            mahjong.mode.proto.SettlePlayerData result = buildPartial();
            if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
            }
            return result;
        }

        public mahjong.mode.proto.SettlePlayerData buildPartial() {
            mahjong.mode.proto.SettlePlayerData result = new mahjong.mode.proto.SettlePlayerData(this);
            if (playerBuilder_ == null) {
                result.player_ = player_;
            } else {
                result.player_ = playerBuilder_.build();
            }
            result.settle_ = settle_;
            result.majong_ = majong_;
            result.adjunct_ = adjunct_;
            onBuilt();
            return result;
        }

        public Builder clone() {
            return (Builder) super.clone();
        }

        public Builder setField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                Object value) {
            return (Builder) super.setField(field, value);
        }

        public Builder clearField(
                com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
        }

        public Builder clearOneof(
                com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
        }

        public Builder setRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                int index, Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
        }

        public Builder addRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                Object value) {
            return (Builder) super.addRepeatedField(field, value);
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof mahjong.mode.proto.SettlePlayerData) {
                return mergeFrom((mahjong.mode.proto.SettlePlayerData) other);
            } else {
                super.mergeFrom(other);
                return this;
            }
        }

        public Builder mergeFrom(mahjong.mode.proto.SettlePlayerData other) {
            if (other == mahjong.mode.proto.SettlePlayerData.getDefaultInstance()) return this;
            if (other.hasPlayer()) {
                mergePlayer(other.getPlayer());
            }
            if (other.settle_ != 0) {
                setSettleValue(other.getSettleValue());
            }
            if (other.getMajong() != 0) {
                setMajong(other.getMajong());
            }
            if (other.getAdjunct() != com.google.protobuf.ByteString.EMPTY) {
                setAdjunct(other.getAdjunct());
            }
            onChanged();
            return this;
        }

        public final boolean isInitialized() {
            return true;
        }

        public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            mahjong.mode.proto.SettlePlayerData parsedMessage = null;
            try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (mahjong.mode.proto.SettlePlayerData) e.getUnfinishedMessage();
                throw e.unwrapIOException();
            } finally {
                if (parsedMessage != null) {
                    mergeFrom(parsedMessage);
                }
            }
            return this;
        }

        private mahjong.mode.proto.MajongPlayerData player_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
                mahjong.mode.proto.MajongPlayerData, mahjong.mode.proto.MajongPlayerData.Builder, mahjong.mode.proto.MajongPlayerDataOrBuilder> playerBuilder_;

        /**
         * <code>.majong_rpc.MajongPlayerData player = 1;</code>
         */
        public boolean hasPlayer() {
            return playerBuilder_ != null || player_ != null;
        }

        /**
         * <code>.majong_rpc.MajongPlayerData player = 1;</code>
         */
        public mahjong.mode.proto.MajongPlayerData getPlayer() {
            if (playerBuilder_ == null) {
                return player_ == null ? mahjong.mode.proto.MajongPlayerData.getDefaultInstance() : player_;
            } else {
                return playerBuilder_.getMessage();
            }
        }

        /**
         * <code>.majong_rpc.MajongPlayerData player = 1;</code>
         */
        public Builder setPlayer(mahjong.mode.proto.MajongPlayerData value) {
            if (playerBuilder_ == null) {
                if (value == null) {
                    throw new NullPointerException();
                }
                player_ = value;
                onChanged();
            } else {
                playerBuilder_.setMessage(value);
            }

            return this;
        }

        /**
         * <code>.majong_rpc.MajongPlayerData player = 1;</code>
         */
        public Builder setPlayer(
                mahjong.mode.proto.MajongPlayerData.Builder builderForValue) {
            if (playerBuilder_ == null) {
                player_ = builderForValue.build();
                onChanged();
            } else {
                playerBuilder_.setMessage(builderForValue.build());
            }

            return this;
        }

        /**
         * <code>.majong_rpc.MajongPlayerData player = 1;</code>
         */
        public Builder mergePlayer(mahjong.mode.proto.MajongPlayerData value) {
            if (playerBuilder_ == null) {
                if (player_ != null) {
                    player_ =
                            mahjong.mode.proto.MajongPlayerData.newBuilder(player_).mergeFrom(value).buildPartial();
                } else {
                    player_ = value;
                }
                onChanged();
            } else {
                playerBuilder_.mergeFrom(value);
            }

            return this;
        }

        /**
         * <code>.majong_rpc.MajongPlayerData player = 1;</code>
         */
        public Builder clearPlayer() {
            if (playerBuilder_ == null) {
                player_ = null;
                onChanged();
            } else {
                player_ = null;
                playerBuilder_ = null;
            }

            return this;
        }

        /**
         * <code>.majong_rpc.MajongPlayerData player = 1;</code>
         */
        public mahjong.mode.proto.MajongPlayerData.Builder getPlayerBuilder() {

            onChanged();
            return getPlayerFieldBuilder().getBuilder();
        }

        /**
         * <code>.majong_rpc.MajongPlayerData player = 1;</code>
         */
        public mahjong.mode.proto.MajongPlayerDataOrBuilder getPlayerOrBuilder() {
            if (playerBuilder_ != null) {
                return playerBuilder_.getMessageOrBuilder();
            } else {
                return player_ == null ?
                        mahjong.mode.proto.MajongPlayerData.getDefaultInstance() : player_;
            }
        }

        /**
         * <code>.majong_rpc.MajongPlayerData player = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
                mahjong.mode.proto.MajongPlayerData, mahjong.mode.proto.MajongPlayerData.Builder, mahjong.mode.proto.MajongPlayerDataOrBuilder>
        getPlayerFieldBuilder() {
            if (playerBuilder_ == null) {
                playerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                        mahjong.mode.proto.MajongPlayerData, mahjong.mode.proto.MajongPlayerData.Builder, mahjong.mode.proto.MajongPlayerDataOrBuilder>(
                        getPlayer(),
                        getParentForChildren(),
                        isClean());
                player_ = null;
            }
            return playerBuilder_;
        }

        private int settle_ = 0;

        /**
         * <code>.majong_rpc.SettleType settle = 2;</code>
         */
        public int getSettleValue() {
            return settle_;
        }

        /**
         * <code>.majong_rpc.SettleType settle = 2;</code>
         */
        public Builder setSettleValue(int value) {
            settle_ = value;
            onChanged();
            return this;
        }

        /**
         * <code>.majong_rpc.SettleType settle = 2;</code>
         */
        public mahjong.mode.proto.SettleType getSettle() {
            mahjong.mode.proto.SettleType result = mahjong.mode.proto.SettleType.valueOf(settle_);
            return result == null ? mahjong.mode.proto.SettleType.UNRECOGNIZED : result;
        }

        /**
         * <code>.majong_rpc.SettleType settle = 2;</code>
         */
        public Builder setSettle(mahjong.mode.proto.SettleType value) {
            if (value == null) {
                throw new NullPointerException();
            }

            settle_ = value.getNumber();
            onChanged();
            return this;
        }

        /**
         * <code>.majong_rpc.SettleType settle = 2;</code>
         */
        public Builder clearSettle() {

            settle_ = 0;
            onChanged();
            return this;
        }

        private int majong_;

        /**
         * <pre>
         * 胡的哪张牌
         * </pre>
         * <p>
         * <code>int32 majong = 3;</code>
         */
        public int getMajong() {
            return majong_;
        }

        /**
         * <pre>
         * 胡的哪张牌
         * </pre>
         * <p>
         * <code>int32 majong = 3;</code>
         */
        public Builder setMajong(int value) {

            majong_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * 胡的哪张牌
         * </pre>
         * <p>
         * <code>int32 majong = 3;</code>
         */
        public Builder clearMajong() {

            majong_ = 0;
            onChanged();
            return this;
        }

        private com.google.protobuf.ByteString adjunct_ = com.google.protobuf.ByteString.EMPTY;

        /**
         * <pre>
         * 附加数据，用于一些特殊需求的麻将
         * </pre>
         * <p>
         * <code>bytes adjunct = 4;</code>
         */
        public com.google.protobuf.ByteString getAdjunct() {
            return adjunct_;
        }

        /**
         * <pre>
         * 附加数据，用于一些特殊需求的麻将
         * </pre>
         * <p>
         * <code>bytes adjunct = 4;</code>
         */
        public Builder setAdjunct(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }

            adjunct_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * 附加数据，用于一些特殊需求的麻将
         * </pre>
         * <p>
         * <code>bytes adjunct = 4;</code>
         */
        public Builder clearAdjunct() {

            adjunct_ = getDefaultInstance().getAdjunct();
            onChanged();
            return this;
        }

        public final Builder setUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
            return this;
        }

        public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
            return this;
        }


        // @@protoc_insertion_point(builder_scope:majong_rpc.SettlePlayerData)
    }

    // @@protoc_insertion_point(class_scope:majong_rpc.SettlePlayerData)
    private static final mahjong.mode.proto.SettlePlayerData DEFAULT_INSTANCE;

    static {
        DEFAULT_INSTANCE = new mahjong.mode.proto.SettlePlayerData();
    }

    public static mahjong.mode.proto.SettlePlayerData getDefaultInstance() {
        return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SettlePlayerData>
            PARSER = new com.google.protobuf.AbstractParser<SettlePlayerData>() {
        public SettlePlayerData parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return new SettlePlayerData(input, extensionRegistry);
        }
    };

    public static com.google.protobuf.Parser<SettlePlayerData> parser() {
        return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SettlePlayerData> getParserForType() {
        return PARSER;
    }

    public mahjong.mode.proto.SettlePlayerData getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
    }

}

