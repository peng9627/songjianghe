// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: majong_rpc.proto

package mahjong.mode.proto;

/**
 * <pre>
 * 杠牌类型
 * </pre>
 * <p>
 * Protobuf enum {@code majong_rpc.GangType}
 */
public enum GangType
        implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 巴杠
     * </pre>
     * <p>
     * <code>BGANG = 0;</code>
     */
    BGANG(0),
    /**
     * <pre>
     * 明杠
     * </pre>
     * <p>
     * <code>MGANG = 1;</code>
     */
    MGANG(1),
    /**
     * <pre>
     * 暗杠
     * </pre>
     * <p>
     * <code>AGANG = 2;</code>
     */
    AGANG(2),
    UNRECOGNIZED(-1),;

    /**
     * <pre>
     * 巴杠
     * </pre>
     * <p>
     * <code>BGANG = 0;</code>
     */
    public static final int BGANG_VALUE = 0;
    /**
     * <pre>
     * 明杠
     * </pre>
     * <p>
     * <code>MGANG = 1;</code>
     */
    public static final int MGANG_VALUE = 1;
    /**
     * <pre>
     * 暗杠
     * </pre>
     * <p>
     * <code>AGANG = 2;</code>
     */
    public static final int AGANG_VALUE = 2;


    public final int getNumber() {
        if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                    "Can't get the number of an unknown enum value.");
        }
        return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static GangType valueOf(int value) {
        return forNumber(value);
    }

    public static GangType forNumber(int value) {
        switch (value) {
            case 0:
                return BGANG;
            case 1:
                return MGANG;
            case 2:
                return AGANG;
            default:
                return null;
        }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GangType>
    internalGetValueMap() {
        return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<
            GangType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<GangType>() {
                public GangType findValueByNumber(int number) {
                    return GangType.forNumber(number);
                }
            };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
    getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptorForType() {
        return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptor() {
        return mahjong.mode.proto.MajongRpcProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final GangType[] VALUES = values();

    public static GangType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
                    "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
    }

    private final int value;

    private GangType(int value) {
        this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:majong_rpc.GangType)
}

